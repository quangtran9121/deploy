{
  "issueCategories": {
    "license": {
      "title": "License"
    },
    "maintenance": {
      "title": "Maintenance"
    },
    "miscellaneous": {
      "title": "Miscellaneous"
    },
    "quality": {
      "title": "Quality"
    },
    "supplyChainRisk": {
      "title": "Supply chain risk"
    },
    "vulnerability": {
      "title": "Vulnerability"
    }
  },
  "issueSeverity": {
    "0": "Low",
    "1": "Medium",
    "2": "High",
    "3": "Critical"
  },
  "issues": {
    "badEncoding": {
      "description": "Source files are encoded using a non-standard text encoding.",
      "props": {
        "encoding": "Encoding"
      },
      "suggestion": "Ensure all published files are encoded using a standard encoding such as UTF8, UTF16, UTF32, SHIFT-JIS, etc.",
      "title": "Bad text encoding",
      "emoji": "‚ö†Ô∏è"
    },
    "badSemver": {
      "description": "Package version is not a valid semantic version (semver).",
      "suggestion": "All versions of all packages on npm should use use a valid semantic version. Publish a new version of the package with a valid semantic version. Semantic version ranges do not work with invalid semantic versions.",
      "title": "Bad semver",
      "emoji": "‚ö†Ô∏è"
    },
    "badSemverDependency": {
      "description": "Package has dependencies with an invalid semantic version. This could be a sign of beta, low quality, or unmaintained dependencies.",
      "props": {
        "packageName": "Package name",
        "packageVersion": "Package version"
      },
      "suggestion": "Switch to a version of the dependency with valid semver or override the dependency version if it is determined to be problematic.",
      "title": "Bad dependency semver",
      "emoji": "‚ö†Ô∏è"
    },
    "bidi": {
      "description": "Source files contain bidirectional unicode control characters. This could indicate a Trojan source supply chain attack. See: trojansource.code for more information.",
      "suggestion": "Remove bidirectional unicode control characters, or clearly document what they are used for.",
      "title": "Bidirectional unicode control characters",
      "emoji": "‚ö†Ô∏è"
    },
    "binScriptConfusion": {
      "description": "This package has multiple bin scripts with the same name.  This can cause non-deterministic behavior when installing or could be a sign of a supply chain attack",
      "props": {
        "binScript": "Bin script"
      },
      "suggestion": "Consider removing one of the conflicting packages.  Packages should only export bin scripts with their name",
      "title": "Bin script confusion",
      "emoji": "üòµ‚Äçüí´"
    },
    "chronoAnomaly": {
      "description": "Semantic versions published out of chronological order.",
      "props": {
        "prevChronoDate": "Previous chronological date",
        "prevChronoVersion": "Previous chronological version",
        "prevSemverDate": "Previous semver date",
        "prevSemverVersion": "Previous semver version"
      },
      "suggestion": "This could either indicate dependency confusion or a patched vulnerability.",
      "title": "Chronological version anomaly",
      "emoji": "‚ö†Ô∏è"
    },
    "criticalCVE": {
      "description": "Contains a Critical Common Vulnerability and Exposure (CVE).",
      "props": {
        "id": "Id",
        "severity": "Severity",
        "title": "Title",
        "url": "URL"
      },
      "suggestion": "Remove or replace dependencies that include known critical CVEs. Consumers can use dependency overrides or npm audit fix --force to remove vulnerable dependencies.",
      "title": "Critical CVE",
      "emoji": "‚ö†Ô∏è"
    },
    "cve": {
      "description": "Contains a high severity Common Vulnerability and Exposure (CVE).",
      "props": {
        "id": "Id",
        "severity": "Severity",
        "title": "Title",
        "url": "URL",
        "vulnerable_versions": "Vulnerable versions"
      },
      "suggestion": "Remove or replace dependencies that include known high severity CVEs. Consumers can use dependency overrides or npm audit fix --force to remove vulnerable dependencies.",
      "title": "CVE",
      "emoji": "‚ö†Ô∏è"
    },
    "debugAccess": {
      "description": "Uses debug, reflection and dynamic code execution features.",
      "props": {
        "module": "Module"
      },
      "suggestion": "Removing the use of debug will reduce the risk of any reflection and dynamic code execution.",
      "title": "Debug access",
      "emoji": "‚ö†Ô∏è"
    },
    "deprecated": {
      "description": "The maintainer of the package marked it as deprecated. This could indicate that a single version should not be used, or that the package is no longer maintained and any new vulnerabilities will not be fixed.",
      "props": {
        "reason": "Reason"
      },
      "suggestion": "Research the state of the package and determine if there are non-deprecated versions that can be used, or if it should be replaced with a new, supported solution.",
      "title": "Deprecated",
      "emoji": "‚ö†Ô∏è"
    },
    "deprecatedException": {
      "description": "Contains a known deprecated SPDX license exception.",
      "props": {
        "comments": "Comments",
        "exceptionId": "Exception id"
      },
      "suggestion": "Fix the license so that it no longer contains deprecated SPDX license exceptions.",
      "title": "Deprecated SPDX exception",
      "emoji": "‚ö†Ô∏è"
    },
    "deprecatedLicense": {
      "description": "License is deprecated which may have legal implications regarding the package's use.",
      "props": {
        "licenseId": "License id"
      },
      "suggestion": "Update or change the license to a well-known or updated license.",
      "title": "Deprecated license",
      "emoji": "‚ö†Ô∏è"
    },
    "didYouMean": {
      "description": "Package name is similar to other popular packages and may not be the package you want.",
      "props": {
        "alternatePackage": "Alternate package",
        "downloads": "Downloads",
        "downloadsRatio": "Download ratio",
        "editDistance": "Edit distance"
      },
      "suggestion": "Use care when consuming similarly named packages and ensure that you did not intend to consume a different package. Malicious packages often publish using similar names as existing popular packages.",
      "title": "Potential typo squat",
      "emoji": "üßê"
    },
    "dynamicRequire": {
      "description": "Dynamic require can indicate the package is performing dangerous or unsafe dynamic code execution.",
      "suggestion": "Packages should avoid dynamic imports when possible. Audit the use of dynamic require to ensure it is not executing malicious or vulnerable code.",
      "title": "Dynamic require",
      "emoji": "‚ö†Ô∏è"
    },
    "emptyPackage": {
      "description": "Package does not contain any code. It may be removed, is name squatting, or the result of a faulty package publish.",
      "props": {
        "linesOfCode": "Lines of code"
      },
      "suggestion": "Remove dependencies that do not export any code or functionality and ensure the package version includes all of the files it is supposed to.",
      "title": "Empty package",
      "emoji": "‚ö†Ô∏è"
    },
    "envVars": {
      "description": "Package accesses environment variables, which may be a sign of credential stuffing or data theft.",
      "props": {
        "envVars": "Environment variables"
      },
      "suggestion": "Packages should be clear about which environment variables they access, and care should be taken to ensure they only access environment variables they claim to.",
      "title": "Environment variable access",
      "emoji": "‚ö†Ô∏è"
    },
    "extraneousDependency": {
      "description": "Package optionally loads a dependency which is not specified within any of the package.tson dependency fields. It may inadvertently be importing dependencies specified by other packages.",
      "props": {
        "name": "Name"
      },
      "suggestion": "Specify all optionally loaded dependencies in optionalDependencies within package.tson.",
      "title": "Extraneous dependency",
      "emoji": "‚ö†Ô∏è"
    },
    "fileDependency": {
      "description": "Contains a dependency which resolves to a file. This can obfuscate analysis and serves no useful purpose.",
      "props": {
        "filePath": "File path",
        "packageName": "Package name"
      },
      "suggestion": "Remove the dependency specified by a file resolution string from package.tson and update any bare name imports that referenced it before to use relative path strings.",
      "title": "File dependency",
      "emoji": "‚ö†Ô∏è"
    },
    "filesystemAccess": {
      "description": "Accesses the file system, and could potentially read sensitive data.",
      "props": {
        "module": "Module"
      },
      "suggestion": "If a package must read the file system, clarify what it will read and ensure it reads only what it claims to. If appropriate, packages can leave file system access to consumers and operate on data passed to it instead.",
      "title": "Filesystem access",
      "emoji": "‚ö†Ô∏è"
    },
    "gitDependency": {
      "description": "Contains a dependency which resolves to a remote git URL. Dependencies fetched from git URLs are not immutable can be used to inject untrusted code or reduce the likelihood of a reproducible install.",
      "props": {
        "packageName": "Package name",
        "url": "URL"
      },
      "suggestion": "Publish the git dependency to npm or a private package repository and consume it from there.",
      "title": "Git dependency",
      "emoji": "üç£"
    },
    "gitHubDependency": {
      "description": "Contains a dependency which resolves to a GitHub URL. Dependencies fetched from GitHub specifiers are not immutable can be used to inject untrusted code or reduce the likelihood of a reproducible install.",
      "props": {
        "commitsh": "Commit-ish (commit, branch, tag or version)",
        "githubRepo": "Github repo",
        "githubUser": "Github user",
        "packageName": "Package name"
      },
      "suggestion": "Publish the GitHub dependency to npm or a private package repository and consume it from there.",
      "title": "GitHub dependency",
      "emoji": "‚ö†Ô∏è"
    },
    "hasNativeCode": {
      "description": "Contains native code which could be a vector to obscure malicious code, and generally decrease the likelihood of reproducible or reliable installs.",
      "suggestion": "Ensure that native code bindings are expected. Consumers may consider pure JS and functionally similar alternatives to avoid the challenges and risks associated with native code bindings.",
      "title": "Native code",
      "emoji": "ü´£"
    },
    "highEntropyStrings": {
      "description": "Contains high entropy strings. This could be a sign of encrypted data, leaked secrets or obfuscated code.",
      "suggestion": "Please inspect these strings to check if these strings are benign. Maintainers should clarify the purpose and existence of high entropy strings if there is a legitimate purpose.",
      "title": "High entropy strings",
      "emoji": "‚ö†Ô∏è"
    },
    "homoglyphs": {
      "description": "Contains unicode homoglyphs which can be used in supply chain confusion attacks.",
      "suggestion": "Remove unicode homoglyphs if they are unnecessary, and audit their presence to confirm legitimate use.",
      "title": "Unicode homoglyphs",
      "emoji": "‚ö†Ô∏è"
    },
    "httpDependency": {
      "description": "Contains a dependency which resolves to a remote HTTP URL which could be used to inject untrusted code and reduce overall package reliability.",
      "props": {
        "packageName": "Package name",
        "url": "URL"
      },
      "suggestion": "Publish the HTTP URL dependency to npm or a private package repository and consume it from there.",
      "title": "HTTP dependency",
      "emoji": "ü•©"
    },
    "installScripts": {
      "description": "Install scripts are run when the package is installed. The majority of malware in npm is hidden in install scripts.",
      "props": {
        "script": "Script",
        "source": "Source"
      },
      "suggestion": "Packages should not be running non-essential scripts during install and there are often solutions to problems people solve with install scripts that can be run at publish time instead.",
      "title": "Install scripts",
      "emoji": "üìú"
    },
    "gptMalware": {
      "description": "Artificial intelligence has determined that this package likely contains malicious behavior",
      "props": {
        "notes": "Does this contain malware?"
      },
      "suggestion": "Packages which contain malware should never be installed.  This package has been reported to npm for removal by socket",
      "title": "AI detected malware",
      "emoji": "ü§ñ"
    },
    "invalidPackageJSON": {
      "description": "Package has an invalid package.tson and can cause installation problems if you try to use it.",
      "suggestion": "Fix syntax errors in the invalid package.tson and publish a new version with a valid package.tson. Consumers can use npm overrides to force a version that does not have this problem if one exists.",
      "title": "Invalid package.tson",
      "emoji": "ü§í"
    },
    "invisibleChars": {
      "description": "Source files contain invisible characters. This could indicate source obfuscation or a supply chain attack.",
      "suggestion": "Remove invisible characters. If their use is justified, use their visible escaped counterparts.",
      "title": "Invisible chars",
      "emoji": "‚ö†Ô∏è"
    },
    "licenseChange": {
      "description": "Package license has recently changed.",
      "props": {
        "newLicenseId": "New license id",
        "prevLicenseId": "Previous license id"
      },
      "suggestion": "License changes should be reviewed carefully to inform ongoing use. Packages should avoid making major changes to their license type.",
      "title": "License change",
      "emoji": "‚ö†Ô∏è"
    },
    "licenseException": {
      "description": "Contains an SPDX license exception.",
      "props": {
        "comments": "Comments",
        "exceptionId": "Exception id"
      },
      "suggestion": "License exceptions should be carefully reviewed.",
      "title": "License exception",
      "emoji": "‚ö†Ô∏è"
    },
    "longStrings": {
      "description": "Contains long string literals, which may be a sign of obfuscated or packed code.",
      "suggestion": "Avoid publishing or consuming obfuscated or bundled code. It makes dependencies difficult to audit and undermines the module resolution system.",
      "title": "Long strings",
      "emoji": "‚ö†Ô∏è"
    },
    "missingTarball": {
      "description": "This package is missing it's tarball.  It could be removed from the npm registry or there may have been an error when publishing.",
      "suggestion": "This package cannot be analyzed or installed due to missing data.",
      "title": "Missing package tarball",
      "emoji": "‚ùî"
    },
    "majorRefactor": {
      "description": "Package has recently undergone a major refactor. It may be unstable or indicate significant internal changes. Use caution when updating to versions that include significant changes.",
      "props": {
        "changedPercent": "Change percentage",
        "curSize": "Current amount of lines",
        "linesChanged": "Lines changed",
        "prevSize": "Previous amount of lines"
      },
      "suggestion": "Consider waiting before upgrading to see if any issues are discovered, or be prepared to scrutinize any bugs or subtle changes the major refactor may bring. Publishers my consider publishing beta versions of major refactors to limit disruption to parties interested in the new changes.",
      "title": "Major refactor",
      "emoji": "‚ö†Ô∏è"
    },
    "malware": {
      "description": "This package is malware. We have asked npm to remove it.",
      "props": {
        "id": "Id",
        "note": "Note"
      },
      "title": "Known Malware",
      "suggestion": "It is strongly recommended that malware is removed from your codebase.",
      "emoji": "‚ò†Ô∏è"
    },
    "mildCVE": {
      "description": "Contains a low severity Common Vulnerability and Exposure (CVE).",
      "props": {
        "id": "Id",
        "severity": "Severity",
        "title": "Title",
        "url": "URL"
      },
      "suggestion": "Remove or replace dependencies that include known low severity CVEs. Consumers can use dependency overrides or npm audit fix --force to remove vulnerable dependencies.",
      "title": "Mild CVE",
      "emoji": "‚ö†Ô∏è"
    },
    "minifiedFile": {
      "description": "This package contains minified code.  This may be harmless in some cases where minified code is included in packaged libraries, however packages on npm should not minify code.",
      "props": {
        "confidence": "Confidence"
      },
      "suggestion": "In many cases minified code is harmless, however minified code can be used to hide a supply chain attack.  Consider not shipping minified code on npm.",
      "title": "Minified code",
      "emoji": "‚ö†Ô∏è"
    },
    "missingAuthor": {
      "description": "The package was published by an npm account that no longer exists.",
      "suggestion": "Packages should have active and identified authors.",
      "title": "Non-existent author",
      "emoji": "ü´•"
    },
    "missingDependency": {
      "description": "A required dependency is not declared in package.tson and may prevent the package from working.",
      "props": {
        "name": "Name"
      },
      "suggestion": "The package should define the missing dependency inside of package.tson and publish a new version. Consumers may have to install the missing dependency themselves as long as the dependency remains missing. If the dependency is optional, add it to optionalDependencies and handle the missing case.",
      "title": "Missing dependency",
      "emoji": "‚ö†Ô∏è"
    },
    "missingLicense": {
      "description": "Package does not have a license and consumption legal status is unknown.",
      "suggestion": "A new version of the package should be published that includes a valid SPDX license in a license file, pacakge.tson license field or mentioned in the README.",
      "title": "Missing license",
      "emoji": "‚ö†Ô∏è"
    },
    "mixedLicense": {
      "description": "Package contains multiple licenses.",
      "props": {
        "licenseId": "License Id"
      },
      "suggestion": "A new version of the package should be published that includes a single license. Consumers may seek clarification from the package author. Ensure that the license details are consistent across the LICENSE file, package.tson license field and license details mentioned in the README.",
      "title": "Mixed license",
      "emoji": "‚ö†Ô∏è"
    },
    "modifiedException": {
      "description": "Package contains a modified version of an SPDX license exception.  Please read carefully before using this code.",
      "props": {
        "comments": "Comments",
        "exceptionId": "Exception id",
        "similarity": "Similarity"
      },
      "suggestion": "Packages should avoid making modifications to standard license exceptions.",
      "title": "Modified license exception",
      "emoji": "‚ö†Ô∏è"
    },
    "modifiedLicense": {
      "description": "Package contains a modified version of an SPDX license.  Please read carefully before using this code.",
      "props": {
        "licenseId": "License id",
        "similarity": "Similarity"
      },
      "suggestion": "Packages should avoid making modifications to standard licenses.",
      "title": "Modified license",
      "emoji": "‚ö†Ô∏è"
    },
    "networkAccess": {
      "description": "This module accesses the network.",
      "props": {
        "module": "Module"
      },
      "suggestion": "Packages should remove all network access that isn't functionally unnecessary. Consumers should audit network access to ensure legitimate use.",
      "title": "Network access",
      "emoji": "‚ö†Ô∏è"
    },
    "newAuthor": {
      "description": "A new npm collaborator published a version of the package for the first time. New collaborators are usually benign additions to a project, but do indicate a change to the security surface area of a package.",
      "props": {
        "newAuthor": "New author",
        "prevAuthor": "Previous author"
      },
      "suggestion": "Scrutinize new collaborator additions to packages because they now have the ability to publish code into your dependency tree. Packages should avoid frequent or unnecessary additions or changes to publishing rights.",
      "title": "New author",
      "emoji": "‚ö†Ô∏è"
    },
    "noAuthorData": {
      "description": "Package does not specify a list of contributors or an author in package.tson.",
      "suggestion": "Add a author field or contributors array to package.tson.",
      "title": "No contributors or author data",
      "emoji": "‚ö†Ô∏è"
    },
    "noBugTracker": {
      "description": "Package does not have a linked bug tracker in package.tson.",
      "suggestion": "Add a bugs field to package.tson. https://docs.npmjs.com/cli/v8/configuring-npm/package-json#bugs",
      "title": "No bug tracker",
      "emoji": "‚ö†Ô∏è"
    },
    "noREADME": {
      "description": "Package does not have a README. This may indicate a failed publish or a low quality package.",
      "suggestion": "Add a README to to the package and publish a new version.",
      "title": "No README",
      "emoji": "‚ö†Ô∏è"
    },
    "noRepository": {
      "description": "Package does not have a linked source code repository. Without this field, a package will have no reference to the location of the source code use to generate the package.",
      "suggestion": "Add a repository field to package.tson. https://docs.npmjs.com/cli/v8/configuring-npm/package-json#repository",
      "title": "No repository",
      "emoji": "‚ö†Ô∏è"
    },
    "noTests": {
      "description": "Package does not have any tests. This is a strong signal of a poorly maintained or low quality package.",
      "suggestion": "Add tests and publish a new version of the package. Consumers may look for an alternative package with better testing.",
      "title": "No tests",
      "emoji": "‚ö†Ô∏è"
    },
    "noV1": {
      "description": "Package is not semver >=1. This means it is not stable and does not support ^ ranges.",
      "suggestion": "If the package sees any general use, it should begin releasing at version 1.0.0 or later to benefit from semver.",
      "title": "No v1",
      "emoji": "‚ö†Ô∏è"
    },
    "noWebsite": {
      "description": "Package does not have a website.",
      "suggestion": "Add a homepage field to package.tson. https://docs.npmjs.com/cli/v8/configuring-npm/package-json#homepage",
      "title": "No website",
      "emoji": "‚ö†Ô∏è"
    },
    "nonFSFLicense": {
      "description": "Package has a non-FSF-approved license.",
      "props": {
        "licenseId": "License id"
      },
      "title": "Non FSF license",
      "emoji": "‚ö†Ô∏è"
    },
    "nonOSILicense": {
      "description": "Package has a non-OSI-approved license.",
      "props": {
        "licenseId": "License id"
      },
      "title": "Non OSI license",
      "emoji": "‚ö†Ô∏è"
    },
    "nonSPDXLicense": {
      "description": "Package contains a non-standard license somewhere. Please read carefully before using.",
      "suggestion": "Package should adopt a standard SPDX license consistently across all license locations (LICENSE files, package.tson license fields, and READMEs).",
      "title": "Non SPDX license",
      "emoji": "‚ö†Ô∏è"
    },
    "notice": {
      "description": "Package contains a legal notice. This could increase your exposure to legal risk when using this project.",
      "title": "Legal notice",
      "emoji": "‚ö†Ô∏è"
    },
    "obfuscatedFile": {
      "description": "Obfuscated files are intentionally packed to hide their behavior.  This could be a sign of malware",
      "props": {
        "confidence": "Confidence"
      },
      "suggestion": "Packages should not obfuscate their code.  Consider not using packages with obfuscated code",
      "title": "Obfuscated code",
      "emoji": "‚ö†Ô∏è"
    },
    "obfuscatedRequire": {
      "description": "Package accesses dynamic properties of require and may be obfuscating code execution.",
      "suggestion": "The package should not access dynamic properties of module. Instead use import or require directly.",
      "title": "Obfuscated require",
      "emoji": "‚ö†Ô∏è"
    },
    "peerDependency": {
      "description": "Package specifies peer dependencies in package.tson.",
      "props": {
        "name": "Name"
      },
      "suggestion": "Peer dependencies are fragile and can cause major problems across version changes. Be careful when updating this dependency and its peers.",
      "title": "Peer dependency",
      "emoji": "‚ö†Ô∏è"
    },
    "semverAnomaly": {
      "description": "Package semver skipped several versions, this could indicate a dependency confusion attack or indicate the intention of disruptive breaking changes or major priority shifts for the project.",
      "props": {
        "newVersion": "New version",
        "prevVersion": "Previous version"
      },
      "suggestion": "Packages should follow semantic versions conventions by not skipping subsequent version numbers. Consumers should research the purpose of the skipped version number.",
      "title": "Semver anomaly",
      "emoji": "‚ö†Ô∏è"
    },
    "shellAccess": {
      "description": "This module accesses the system shell. Accessing the system shell increases the risk of executing arbitrary code.",
      "props": {
        "module": "Module"
      },
      "suggestion": "Packages should avoid accessing the shell which can reduce portability, and make it easier for malicious shell access to be introduced.",
      "title": "Shell access",
      "emoji": "‚ö†Ô∏è"
    },
    "shellScriptOverride": {
      "description": "This package re-exports a well known shell command via an npm bin script.  This is possibly a supply chain attack",
      "props": {
        "binScript": "Bin script"
      },
      "suggestion": "Packages should not export bin scripts which conflict with well known shell commands",
      "title": "Bin script shell injection",
      "emoji": "ü¶Ä"
    },
    "suspiciousString": {
      "description": "This package contains suspicious text patterns which are commonly associated with bad behavior",
      "props": {
        "explanation": "Explanation",
        "pattern": "Pattern"
      },
      "suggestion": "The package code should be reviewed before installing",
      "title": "Suspicious strings",
      "emoji": "‚ö†Ô∏è"
    },
    "telemetry": {
      "description": "This package contains telemetry which tracks you.",
      "props": {
        "id": "Id",
        "note": "Note"
      },
      "title": "Telemetry",
      "emoji": "üìû"
    },
    "trivialPackage": {
      "description": "Packages less than 10 lines of code are easily copied into your own project and may not warrant the additional supply chain risk of an external dependency.",
      "props": {
        "linesOfCode": "Lines of code"
      },
      "suggestion": "Removing this package as a dependency and implementing its logic will reduce supply chain risk.",
      "title": "Trivial Package",
      "emoji": "‚ö†Ô∏è"
    },
    "troll": {
      "description": "This package is a joke, parody, or includes undocumented or hidden behavior unrelated to its primary function.",
      "props": {
        "id": "Id",
        "note": "Note"
      },
      "title": "Protestware/Troll package",
      "emoji": "üßå"
    },
    "typeModuleCompatibility": {
      "description": "Package is CommonJS, but has a dependency which is type: \"module\".  The two are likely incompatible.",
      "suggestion": "The package needs to switch to dynamic import on the esmodule dependency, or convert to esm itself. Consumers may experience errors resulting from this incompatibility.",
      "title": "CommonJS depending on ESModule",
      "emoji": "‚ö†Ô∏è"
    },
    "uncaughtOptionalDependency": {
      "description": "Package uses an optional dependency without handling a missing dependency exception. If you install it without the optional dependencies then it could cause runtime errors.",
      "props": {
        "name": "Name"
      },
      "suggestion": "Package should handle the loading of the dependency when it is not present, or convert the optional dependency into a regular dependency.",
      "title": "Uncaught optional dependency",
      "emoji": "‚ö†Ô∏è"
    },
    "unclearLicense": {
      "description": "Package contains a reference to a license without a matching LICENSE file.",
      "props": {
        "possibleLicenseId": "Possible license id"
      },
      "suggestion": "Add a LICENSE file that matches the license field in package.tson. https://docs.npmjs.com/cli/v8/configuring-npm/package-json#license",
      "title": "Unclear license",
      "emoji": "‚ö†Ô∏è"
    },
    "unmaintained": {
      "description": "Package has not been updated in more than a year and may be unmaintained. Problems with the package may go unaddressed.",
      "props": {
        "lastPublish": "Last publish"
      },
      "suggestion": "Package should publish periodic maintenance releases if they are maintained, or deprecate if they have no intention in further maintenance.",
      "title": "Unmaintained",
      "emoji": "‚ö†Ô∏è"
    },
    "unpublished": {
      "description": "Package version was not found on the registry. It may exist on a different registry and need to be configured to pull from that registry.",
      "props": {
        "version": "The version that was not found"
      },
      "suggestion": "Packages can be removed from the registry by manually un-publishing, a security issue removal, or may simply never have been published to the registry. Reliance on these packages will cause problem when they are not found.",
      "title": "Unpublished package",
      "emoji": "‚ö†Ô∏è"
    },
    "unresolvedRequire": {
      "description": "Package imports a file which does not exist and may not work as is. It could also be importing a file that will be created at runtime which could be a vector for running malicious code.",
      "suggestion": "Fix imports so that they require declared dependencies or existing files.",
      "title": "Unresolved require",
      "emoji": "üïµÔ∏è"
    },
    "unsafeCopyright": {
      "description": "Package contains a copyright but no license. Using this package may expose you to legal risk.",
      "suggestion": "Clarify the license type by adding a license field to package.tson and a LICENSE file.",
      "title": "Unsafe copyright",
      "emoji": "‚ö†Ô∏è"
    },
    "unstableOwnership": {
      "description": "A new collaborator has begun publishing package versions. Package stability and security risk may be elevated.",
      "props": {
        "author": "Author"
      },
      "suggestion": "Try to reduce the amount of authors you depend on to reduce the risk to malicious actors gaining access to your supply chain. Packages should remove inactive collaborators with publishing rights from packages on npm.",
      "title": "Unstable ownership",
      "emoji": "‚ö†Ô∏è"
    },
    "unusedDependency": {
      "description": "Package has unused dependencies. This package depends on code that it does not use.  This can increase the attack surface for malware and slow down installation.",
      "props": {
        "name": "Name",
        "version": "Version"
      },
      "suggestion": "Packages should only specify dependencies that they use directly.",
      "title": "Unused dependency",
      "emoji": "‚ö†Ô∏è"
    },
    "urlStrings": {
      "description": "Package contains fragments of external URLs or IP addresses, which may indicate that it covertly exfiltrates data.",
      "props": {
        "urlFragment": "URL Fragment"
      },
      "suggestion": "Avoid using packages that make connections to the network, since this helps to leak data.",
      "title": "URL strings",
      "emoji": "‚ö†Ô∏è"
    },
    "usesEval": {
      "description": "Package uses eval() which is a dangerous function. This prevents the code from running in certain environments and increases the risk that the code may contain exploits or malicious behavior.",
      "props": {
        "evalType": "Eval type"
      },
      "suggestion": "Avoid packages that use eval, since this could potentially execute any code.",
      "title": "Uses eval",
      "emoji": "‚ö†Ô∏è"
    },
    "zeroWidth": {
      "description": "Package files contain zero width unicode characters. This could indicate a supply chain attack.",
      "suggestion": "Packages should remove unnecessary zero width unicode characters and use their visible counterparts.",
      "title": "Zero width unicode chars",
      "emoji": "‚ö†Ô∏è"
    }
  }
}
